name: Deploy Page React Hello World

on:
  push:
    branches: [ "main" ]
  # Permitindo que o workflow execute manualmente pela aba "Actions" do GitHub.
  workflow_dispatch:

# Definindo quais permiss√µes esse workflow tem quando ele roda com o GITHUB_TOKEN   
permissions:
  contents: 'write'
  id-token: 'write'
  pages: 'write'

jobs:
  sonarqube:
    name: An√°lise com SonarQube
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do c√≥digo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Clones superficiais devem ser desativados para uma melhor relev√¢ncia da an√°lise

      - name: Executar SonarQube
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build:
    name: Build, Teste e Release
    needs: sonarqube
    runs-on: ubuntu-latest

    outputs:
      build-path: ${{ steps.build.outputs.path }}

    steps:
      - name: Checkout do c√≥digo
        uses: actions/checkout@v4

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Instalar depend√™ncias
        run: npm ci

      - name: Build da aplica√ß√£o
        run: npm run build

      - name: Executar testes
        run: npm run test

      - name: Criar Release no GitHub
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v1.0.${{ github.run_number }}
          name: "Release v1.0.${{ github.run_number }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload build para o GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./build

  deploy:
    name: Deploy para GitHub Pages
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Configurar GitHub Pages
        uses: actions/configure-pages@v4

      - name: Publicar no GitHub Pages
        uses: actions/deploy-pages@v4

      - name: Print URL do GitHub Pages
        run: echo "Site publicado em https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/"

  # Notificar falahas no email     
  notify:
    name: Notifica√ß√£o de falha
    if: ${{ failure() }}
    runs-on: ubuntu-latest
    needs: [sonarqube, build, deploy]
    steps:
      - name: Enviar e-mail em caso de falha
        uses: dawidd6/action-send-mail@v4
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "üö® CI/CD Falhou no Reposit√≥rio ${{ github.repository }}"
          body: |
            O pipeline falhou na etapa: ${{ github.job }}
            Commit: ${{ github.sha }}
            Autor: ${{ github.actor }}
            Veja mais detalhes: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          to: ${{ secrets.EMAIL_DEV }}
          from: ${{ secrets.EMAIL_GIT }}